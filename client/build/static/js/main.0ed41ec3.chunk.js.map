{"version":3,"sources":["images/Background-V1.1-1.png","images/Logo.png","utils.js","Header.js","NewTransfer.js","TransferList.js","App.js","index.js"],"names":["module","exports","getWallet","web3","a","eth","net","getId","networkId","deployedNetwork","Wallet","networks","Contract","abi","address","Header","approvers","quorum","style","color","join","NewTransfer","createTransfer","useState","undefined","transfer","setTransfer","updateTransfer","e","field","value","target","onSubmit","preventDefault","submit","htmlFor","id","type","onChange","marginRight","fontFamily","TransferList","transfers","approveTransfer","map","key","amount","to","approvals","onClick","sent","App","setWeb3","accounts","setAccounts","wallet","setWallet","setApprovers","setQuorum","setTransfers","useEffect","Promise","resolve","reject","detectEthereumProvider","provider","request","method","Web3","window","ethereum","error","getAccounts","methods","getApprovers","call","getTransfers","promises","newTransfer","approvedByUser","newTransfers","push","init","ingestApprovedByUser","send","from","fetchTransferList","transferId","length","backgroundImage","background","width","height","src","logo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,kC,wUC6BrCC,EAAS,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACQD,EAAKE,IAAIC,IAAIC,QADrB,cACVC,EADU,OAEVC,EAAkBC,EAAOC,SAASH,GAFxB,kBAGT,IAAIL,EAAKE,IAAIO,SAClBF,EAAOG,IACPJ,GAAmBA,EAAgBK,UALrB,2CAAH,sDCfAC,MAZf,YAAsC,IAArBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,OAC1B,OACE,4BAAQC,MAAO,CAAEC,MAAO,SACtB,6CACA,4BACE,0CAAgBH,EAAUI,KAAK,QAC/B,uCAAaH,M,iBCsCNI,MA5Cf,YAAwC,IAAlBC,EAAiB,EAAjBA,eAAiB,EACLC,wBAASC,GADJ,mBAC9BC,EAD8B,KACpBC,EADoB,KAS/BC,EAAiB,SAACC,EAAGC,GACzB,IAAMC,EAAQF,EAAEG,OAAOD,MACvBJ,EAAY,eAAID,EAAL,eAAgBI,EAAQC,MAWrC,OACE,6BACE,wBAAIZ,MAAO,CAAEC,MAAO,SAApB,mBACA,0BAAMa,SAAU,SAAAJ,GAAC,OAtBN,SAAAA,GACbA,EAAEK,iBACFX,EAAeG,GAoBQS,CAAON,KAC1B,2BAAOV,MAAO,CAAEC,MAAO,QAAUgB,QAAQ,UAAzC,WACA,2BACEC,GAAG,SACHC,KAAK,OACLC,SAAU,SAAAV,GAAC,OAAID,EAAeC,EAAG,aAEnC,2BAAOV,MAAO,CAAEC,MAAO,QAAUgB,QAAQ,MAAzC,QACA,2BACEC,GAAG,KACHC,KAAK,OACLC,SAAU,SAAAV,GAAC,OAAID,EAAeC,EAAG,SAEnC,4BAASQ,GAAG,SAASlB,MAtBX,CACdC,MAAO,UACPoB,YAAa,OACbC,WAAY,UAmBR,c,OCAOC,MAnCf,YAAqD,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,gBAGhC,OACE,yBAAKzB,MAAO,CAAEC,MAAO,SACnB,yCACA,+BACE,+BACE,4BACE,kCACA,sCACA,kCACA,yCACA,sCAGJ,+BACGuB,EAAUE,KAAI,SAACnB,GAAD,OACb,wBAAIoB,IAAKpB,EAASW,IAChB,4BAAKX,EAASW,IACd,4BAAKX,EAASqB,QACd,4BAAKrB,EAASsB,IACd,4BACGtB,EAASuB,UACV,4BAAQC,QAAS,kBAAMN,EAAgBlB,EAASW,MAAhD,YAEF,4BAAKX,EAASyB,KAAO,MAAQ,c,oCC0F5BC,MAhHf,WAAgB,IAAD,EACW5B,wBAASC,GADpB,mBACNrB,EADM,KACAiD,EADA,OAEmB7B,wBAASC,GAF5B,mBAEN6B,EAFM,KAEIC,EAFJ,OAGe/B,wBAASC,GAHxB,mBAGN+B,EAHM,KAGEC,EAHF,OAIqBjC,mBAAS,IAJ9B,mBAINP,EAJM,KAIKyC,EAJL,OAKelC,wBAASC,GALxB,mBAKNP,EALM,KAKEyC,EALF,OAMqBnC,mBAAS,IAN9B,mBAMNmB,EANM,KAMKiB,EANL,KAQbC,qBAAU,YACE,uCAAG,wDAAAxD,EAAA,sEJZjB,IAAIyD,QAAJ,uCAAa,WAAOC,EAASC,GAAhB,iBAAA3D,EAAA,sEAEQ4D,MAFR,YAETC,EAFS,wCAMPA,EAASC,QAAQ,CAAEC,OAAQ,wBANpB,OAQb,IAEMhE,EAAO,IAAIiE,IAAKC,OAAOC,UAE7BR,EAAQ3D,GAEN,MAAMoE,GAERR,EAAOQ,GAhBM,OAoBXR,EAAO,oBApBI,2CAAb,yDIYiB,cACL5D,EADK,gBAEYA,EAAKE,IAAImE,cAFrB,cAELnB,EAFK,gBAGUnD,EAAUC,GAHpB,cAGLoD,EAHK,iBAIaA,EAAOkB,QAAQC,eAAeC,OAJ3C,eAIL3D,EAJK,iBAKUuC,EAAOkB,QAAQxD,SAAS0D,OALlC,eAKL1D,EALK,iBAMasC,EAAOkB,QAAQG,eAAeD,OAN3C,QAMLjC,EANK,OAQPmC,EAAWnC,EAAUE,IAAV,uCAAc,WAAMnB,GAAN,eAAArB,EAAA,6DACvB0E,EADuB,YACLrD,IACVW,GAAKX,EAASW,GAC1B0C,EAAYhC,OAASrB,EAASqB,OAC9BgC,EAAY/B,GAAKtB,EAASsB,GAC1B+B,EAAY9B,UAAYvB,EAASuB,UACjC8B,EAAY5B,KAAOzB,EAASyB,KAND,SAOQK,EAAOkB,QAAQzB,UAAUK,EAAS,GAAI5B,EAASW,IAAIuC,OAP3D,cAO3BG,EAAYC,eAPe,yBAQpBD,GARoB,4CAAd,uDAWXE,EAAe,GAnBR,kCAoBmBH,GApBnB,4HAoBIC,EApBJ,EAqBTE,EAAaC,KAAKH,GArBT,mTAwBX1B,EAAQjD,GACRmD,EAAYD,GACZG,EAAUD,GACVE,EAAazC,GACb0C,EAAUzC,GACV0C,EAAaqB,GA7BF,6EAAH,qDA+BVE,KACC,IAEH,IAAMC,EAAoB,uCAAG,WAAMzC,GAAN,+BAAAtC,EAAA,sDACrByE,EAAWnC,EAAUE,IAAV,uCAAc,WAAMnB,GAAN,eAAArB,EAAA,6DACvB0E,EADuB,YACLrD,IACVW,GAAKX,EAASW,GAC1B0C,EAAYhC,OAASrB,EAASqB,OAC9BgC,EAAY/B,GAAKtB,EAASsB,GAC1B+B,EAAY9B,UAAYvB,EAASuB,UACjC8B,EAAY5B,KAAOzB,EAASyB,KAND,SAOQK,EAAOkB,QAAQzB,UAAUK,EAAS,GAAI5B,EAASW,IAAIuC,OAP3D,cAO3BG,EAAYC,eAPe,yBAQpBD,GARoB,4CAAd,uDAWXE,EAAe,GAZM,iCAaKH,GAbL,yHAaVC,EAbU,EAcvBE,EAAaC,KAAKH,GAdK,iTAiBzBnB,EAAaqB,GAjBY,4EAAH,sDAoBpB1D,EAAc,uCAAG,WAAMG,GAAN,SAAArB,EAAA,sEACfmD,EAAOkB,QACVnD,eAAeG,EAASqB,OAAQrB,EAASsB,IACzCqC,KAAK,CAACC,KAAMhC,EAAS,KAHH,uBAIfiC,IAJe,2CAAH,sDAOd3C,EAAe,uCAAG,WAAM4C,GAAN,SAAAnF,EAAA,sEAChBmD,EAAOkB,QACV9B,gBAAgB4C,GAChBH,KAAK,CAACC,KAAMhC,EAAS,KAHF,uBAIhBiC,IAJgB,2CAAH,sDAOfA,EAAiB,uCAAG,4BAAAlF,EAAA,sEACAmD,EAAOkB,QAAQG,eAAeD,OAD9B,OAClBjC,EADkB,OAExByC,EAAqBzC,GAFG,2CAAH,qDAKvB,MACkB,qBAATvC,GACgB,qBAAbkD,GACW,qBAAXE,GACc,IAArBvC,EAAUwE,QACQ,qBAAXvE,EAEH,2CAIP,yBAAKC,MAAO,CACVuE,gBAAgB,OAAD,OAASC,IAAT,KACfC,MAAO,QACPC,OAAQ,UAER,6BACA,yBAAKxD,GAAG,OAAOyD,IAAKC,IAAMC,IAAI,SAD9B,KAIA,yBAAK3D,GAAG,QACR,kBAAC,EAAD,CAAQpB,UAAWA,EAAWC,OAAQA,IACtC,kBAAC,EAAD,CAAaK,eAAgBA,IAC7B,kBAAC,EAAD,CAAcoB,UAAWA,EAAWC,gBAAiBA,OC9G3DqD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.0ed41ec3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Background-V1.1-1.aeea95c7.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo.8c4db20c.png\";","import Web3 from 'web3';\r\nimport Wallet from './contracts/Wallet.json';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\nconst getWeb3 = () =>\r\n\r\nnew Promise( async (resolve, reject) => {\r\n\r\nlet provider = await detectEthereumProvider();\r\n\r\nif(provider) {\r\n\r\nawait provider.request({ method: 'eth_requestAccounts' });\r\n\r\ntry {\r\n\r\nconst web3 = new Web3(window.ethereum);\r\n\r\nresolve(web3);\r\n\r\n} catch(error) {\r\n\r\nreject(error);\r\n\r\n}\r\n\r\n} reject('Install Metamask');\r\n\r\n});\r\nconst getWallet = async web3 => {\r\n  const networkId = await web3.eth.net.getId();\r\n  const deployedNetwork = Wallet.networks[networkId];\r\n  return new web3.eth.Contract(\r\n    Wallet.abi,\r\n    deployedNetwork && deployedNetwork.address,\r\n  );\r\n}\r\n\r\nexport { getWeb3, getWallet }; \r\n","import React from 'react';\r\n\r\nfunction Header({approvers, quorum}) {\r\n  return (\r\n    <header style={{ color: '#fff' }}>\r\n      <h1>Multisig Dapp</h1>\r\n      <ul>\r\n        <li>Approvers: {approvers.join(',  ')}</li>\r\n        <li>Quorum: {quorum}</li>\r\n      </ul>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\n\r\nfunction NewTransfer({createTransfer}) {\r\n  const [transfer, setTransfer] = useState(undefined);\r\n\r\n  const submit = e => {\r\n    e.preventDefault();\r\n    createTransfer(transfer);\r\n\r\n  }\r\n\r\n  const updateTransfer = (e, field) => {\r\n    const value = e.target.value;\r\n    setTransfer({...transfer, [field]: value});\r\n  \r\n    \r\n  }\r\n\r\n  const mystyle = {\r\n    color: \"#9003fc\",\r\n    marginRight: \"20px\",\r\n    fontFamily: \"Arial\"\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ color: '#fff' }}>Create transfer</h2>\r\n      <form onSubmit={e => submit(e)} >\r\n        <label style={{ color: '#fff' }} htmlFor=\"amount\">Amount </label>\r\n        <input \r\n          id=\"amount\"\r\n          type=\"text\" \r\n          onChange={e => updateTransfer(e, 'amount')} \r\n        />\r\n        <label style={{ color: '#fff' }} htmlFor=\"to\"> To </label>\r\n        <input \r\n          id=\"to\"\r\n          type=\"text\" \r\n          onChange={e => updateTransfer(e, 'to')} \r\n        />\r\n        <button  id=\"button\" style={mystyle}> Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTransfer;","import React from 'react';\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction TransferList({transfers, approveTransfer}) {\r\n \r\n\r\n  return (\r\n    <div style={{ color: '#fff' }}>\r\n      <h2>Transfers</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>id</th>\r\n            <th>amount</th>\r\n            <th>to</th>\r\n            <th>approvals</th>\r\n            <th>sent</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transfers.map((transfer) => (\r\n            <tr key={transfer.id}>\r\n              <td>{transfer.id}</td>\r\n              <td>{transfer.amount}</td>\r\n              <td>{transfer.to}</td>\r\n              <td>\r\n                {transfer.approvals}\r\n                <button onClick={() => approveTransfer(transfer.id)}>Approve</button>\r\n              </td>\r\n              <td>{transfer.sent ? 'yes' : 'no'}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransferList;\r\n","import React, { useEffect, useState } from 'react';\nimport { getWeb3, getWallet } from './utils.js'; \nimport Header from './Header.js';\nimport NewTransfer from './NewTransfer.js';\nimport TransferList from './TransferList.js';\nimport './App.css';\nimport background from \"./images/Background-V1.1-1.png\";\nimport logo from \"./images/Logo.png\";\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [wallet, setWallet] = useState(undefined);\n  const [approvers, setApprovers] = useState([]);\n  const [quorum, setQuorum] = useState(undefined);\n  const [transfers, setTransfers] = useState([]);\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const wallet = await getWallet(web3);\n      const approvers = await wallet.methods.getApprovers().call();\n      const quorum = await wallet.methods.quorum().call();\n      const transfers = await wallet.methods.getTransfers().call();\n\n      let promises = transfers.map(async transfer => {\n        let newTransfer = [...transfer];\n        newTransfer.id = transfer.id;\n        newTransfer.amount = transfer.amount;\n        newTransfer.to = transfer.to;\n        newTransfer.approvals = transfer.approvals;\n        newTransfer.sent = transfer.sent;\n        newTransfer.approvedByUser = await wallet.methods.approvals(accounts[0], transfer.id).call();\n        return newTransfer;\n      });\n\n      let newTransfers = [];\n      for await (let newTransfer of promises){\n        newTransfers.push(newTransfer);\n      }\n  \n      setWeb3(web3);\n      setAccounts(accounts);\n      setWallet(wallet);\n      setApprovers(approvers);\n      setQuorum(quorum);\n      setTransfers(newTransfers);\n    };\n    init();\n  }, []);\n\n  const ingestApprovedByUser = async transfers => {\n      let promises = transfers.map(async transfer => {\n        let newTransfer = [...transfer];\n        newTransfer.id = transfer.id;\n        newTransfer.amount = transfer.amount;\n        newTransfer.to = transfer.to;\n        newTransfer.approvals = transfer.approvals;\n        newTransfer.sent = transfer.sent;\n        newTransfer.approvedByUser = await wallet.methods.approvals(accounts[0], transfer.id).call();\n        return newTransfer;\n      });\n  \n      let newTransfers = [];\n      for await (let newTransfer of promises){\n        newTransfers.push(newTransfer);\n      }\n  \n      setTransfers(newTransfers);\n    }\n    \n  const createTransfer = async transfer => {\n    await wallet.methods\n      .createTransfer(transfer.amount, transfer.to)\n      .send({from: accounts[0]});\n    await fetchTransferList();\n  }\n\n  const approveTransfer = async transferId => {\n    await wallet.methods\n      .approveTransfer(transferId)\n      .send({from: accounts[0]});\n    await fetchTransferList();\n  }\n  \n  const fetchTransferList = async () => {\n    const transfers = await wallet.methods.getTransfers().call();\n    ingestApprovedByUser(transfers);\n  }\n\n  if(\n    typeof web3 === 'undefined'\n    || typeof accounts === 'undefined'\n    || typeof wallet === 'undefined'\n    || approvers.length === 0\n    || typeof quorum === 'undefined'\n  ) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div style={{\n      backgroundImage: `url(${background})`,\n      width: '100vw',\n      height: '100vh'\n    }}>\n      <div>\n      <img id=\"logo\" src={logo} alt=\"Logo\" />;\n      </div>\n\n      <div id=\"main\">\n      <Header approvers={approvers} quorum={quorum} />\n      <NewTransfer createTransfer={createTransfer} />\n      <TransferList transfers={transfers} approveTransfer={approveTransfer} />\n      </div> \n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}