{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Web3\\\\6 figure blockchain\\\\wallet\\\\client\\\\src\\\\NewTransfer.js\";\nimport react, { useState } from \"react\";\n\nfunction NewTransfer({\n  createTransfer\n}) {\n  const [transfer, setTransfer] = useState();\n\n  const submit = e => {\n    e.preventDefault();\n    createTransfer(transfer);\n  };\n\n  const updateTransfer = (e, field) => {\n    const value = e.target.value;\n    setTransfer({ ...transfer,\n      [field]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(H2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Create Transfer\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => submit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlfor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"amount\",\n    type: \"text\",\n    onChange: e => updateTransfer(e, 'amount'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlfor: \"to\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"To\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"to\",\n    type: \"text\",\n    onChange: e => updateTransfer(e, 'to'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n}\n\nexport default NewTransfer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Web3/6 figure blockchain/wallet/client/src/NewTransfer.js"],"names":["react","useState","NewTransfer","createTransfer","transfer","setTransfer","submit","e","preventDefault","updateTransfer","field","value","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,WAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAwC;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;;AAEA,QAAMK,MAAM,GAAGC,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,cAAc,CAACC,QAAD,CAAd;AACH,GAHD;;AAKA,QAAMK,cAAc,GAAG,CAACF,CAAD,EAAIG,KAAJ,KAAc;AACjC,UAAMC,KAAK,GAAGJ,CAAC,CAACK,MAAF,CAASD,KAAvB;AACAN,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACM,KAAD,GAASC;AAAvB,KAAD,CAAX;AACH,GAHD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAM,IAAA,QAAQ,EAAGJ,CAAD,IAAOD,MAAM,CAACC,CAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,IAAA,EAAE,EAAC,QADH;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,QAAQ,EAAEA,CAAC,IAAIE,cAAc,CAACF,CAAD,EAAI,QAAJ,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAOI;AAAO,IAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,eAQI;AACA,IAAA,EAAE,EAAC,IADH;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,QAAQ,EAAEA,CAAC,IAAIE,cAAc,CAACF,CAAD,EAAI,IAAJ,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CAFJ,CADJ;AAoBH;;AAED,eAAeL,WAAf","sourcesContent":["import react, { useState } from \"react\";\r\n\r\nfunction NewTransfer ({createTransfer}) {\r\n    const [transfer, setTransfer] = useState();\r\n\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        createTransfer(transfer);\r\n    }\r\n\r\n    const updateTransfer = (e, field) => {\r\n        const value = e.target.value;\r\n        setTransfer({...transfer, [field]: value});\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <H2>Create Transfer</H2>\r\n            <form onSubmit={(e) => submit(e)}>\r\n                <label htmlfor=\"amount\">Amount</label>\r\n                <input\r\n                id=\"amount\"\r\n                type=\"text\"\r\n                onChange={e => updateTransfer(e, 'amount')}\r\n                />\r\n                <label htmlfor=\"to\">To</label>\r\n                <input\r\n                id=\"to\"\r\n                type=\"text\"\r\n                onChange={e => updateTransfer(e, 'to')}\r\n                />\r\n                <button>Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewTransfer;"]},"metadata":{},"sourceType":"module"}