{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Web3\\\\6 figure blockchain\\\\wallet\\\\client\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { getWeb3, getWallet } from './utils.js';\nimport Header from './Header.js';\nimport NewTransfer from './NewTransfer.js';\nimport TransferList from './TransferList.js';\nimport './App.css';\nimport background from \"./images/Background-V1.1-1.png\";\nimport logo from \"./images/Logo.png\";\n\nfunction App() {\n  const [web3, setWeb3] = useState(undefined);\n  const [accounts, setAccounts] = useState(undefined);\n  const [wallet, setWallet] = useState(undefined);\n  const [approvers, setApprovers] = useState([]);\n  const [quorum, setQuorum] = useState(undefined);\n  const [transfers, setTransfers] = useState([]);\n  useEffect(() => {\n    const init = async () => {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const wallet = await getWallet(web3);\n      const approvers = await wallet.methods.getApprovers().call();\n      const quorum = await wallet.methods.quorum().call();\n      const transfers = await wallet.methods.getTransfers().call();\n      setWeb3(web3);\n      setAccounts(accounts);\n      setWallet(wallet);\n      setApprovers(approvers);\n      setQuorum(quorum);\n      setTransfers(transfers);\n    };\n\n    init();\n  }, []);\n\n  const createTransfer = transfer => {\n    wallet.methods.createTransfer(transfer.amount, transfer.to).send({\n      from: accounts[0]\n    });\n  };\n\n  const approveTransfer = transferId => {\n    wallet.methods.approveTransfer(transferId).send({\n      from: accounts[0]\n    });\n  };\n\n  if (typeof web3 === 'undefined' || typeof accounts === 'undefined' || typeof wallet === 'undefined' || approvers.length === 0 || typeof quorum === 'undefined') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: '#fff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: `url(${background})`,\n      width: '100vw',\n      height: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"logo\",\n    src: logo,\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), \";\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    approvers: approvers,\n    quorum: quorum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewTransfer, {\n    createTransfer: createTransfer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransferList, {\n    transfers: transfers,\n    approveTransfer: approveTransfer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Web3/6 figure blockchain/wallet/client/src/App.js"],"names":["React","useEffect","useState","getWeb3","getWallet","Header","NewTransfer","TransferList","background","logo","App","web3","setWeb3","undefined","accounts","setAccounts","wallet","setWallet","approvers","setApprovers","quorum","setQuorum","transfers","setTransfers","init","eth","getAccounts","methods","getApprovers","call","getTransfers","createTransfer","transfer","amount","to","send","from","approveTransfer","transferId","length","color","backgroundImage","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState,  } from 'react';\r\nimport { getWeb3, getWallet } from './utils.js'; \r\nimport Header from './Header.js';\r\nimport NewTransfer from './NewTransfer.js';\r\nimport TransferList from './TransferList.js';\r\nimport './App.css';\r\nimport background from \"./images/Background-V1.1-1.png\";\r\nimport logo from \"./images/Logo.png\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [web3, setWeb3] = useState(undefined);\r\n  const [accounts, setAccounts] = useState(undefined);\r\n  const [wallet, setWallet] = useState(undefined);\r\n  const [approvers, setApprovers] = useState([]);\r\n  const [quorum, setQuorum] = useState(undefined);\r\n  const [transfers, setTransfers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const web3 = await getWeb3();\r\n      const accounts = await web3.eth.getAccounts();\r\n      const wallet = await getWallet(web3);\r\n      const approvers = await wallet.methods.getApprovers().call(); \r\n      const quorum = await wallet.methods.quorum().call(); \r\n      const transfers = await wallet.methods.getTransfers().call();\r\n      setWeb3(web3);\r\n      setAccounts(accounts);\r\n      setWallet(wallet);\r\n      setApprovers(approvers);\r\n      setQuorum(quorum);\r\n      setTransfers(transfers);\r\n    }\r\n    init();\r\n  }, []);\r\n\r\n  const createTransfer = transfer => {\r\n    wallet.methods\r\n      .createTransfer(transfer.amount, transfer.to)\r\n      .send({from: accounts[0]});\r\n      \r\n  }\r\n\r\n  const approveTransfer = transferId =>{\r\n    wallet.methods\r\n      .approveTransfer(transferId)\r\n      .send({from: accounts[0]});\r\n  }\r\n\r\n  if(\r\n    typeof web3 === 'undefined'\r\n    || typeof accounts === 'undefined'\r\n    || typeof wallet === 'undefined'\r\n    || approvers.length === 0\r\n    || typeof quorum === 'undefined'\r\n  ) {\r\n    return <div  style={{ color: '#fff' }}>Loading...</div>;\r\n  }\r\n\r\n\r\n  return (\r\n    \r\n    <div style={{\r\n      backgroundImage: `url(${background})`,\r\n      width: '100vw',\r\n      height: '100vh'\r\n    }}>\r\n      <div>\r\n      <img id=\"logo\" src={logo} alt=\"Logo\" />;\r\n      </div>\r\n\r\n      <div id=\"main\">\r\n      <Header approvers={approvers} quorum={quorum} />\r\n      <NewTransfer createTransfer={createTransfer} />\r\n      <TransferList transfers={transfers} approveTransfer={approveTransfer} />\r\n      </div> \r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}