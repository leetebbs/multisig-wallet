{"ast":null,"code":"import Web3 from 'web3';\nimport Wallet from './contracts/Wallet.json';\n\nconst getWeb3 = () => {\n  return new Web3('http://localhost:9545'); // return new Promise((resolve,reject) => {\n  //   window.addEventListener('load', async () => {\n  //       if (window.ethereum) {\n  //         const web3 = new Web3(window.ethereum);\n  //         resolve(web3);\n  //         try{\n  //           await window.ethereum.enable();\n  //           resolve(web3);\n  //         } catch (error) {\n  //           reject(error);\n  //         }\n  //       // }else if(window.web3) {\n  //       //   resolve(window.web3);\n  //       }else{\n  //         reject('Must install metamask!');\n  //       }\n  // });\n  // });\n};\n\nconst getWallet = async web3 => {\n  const networkId = await web3.eth.net.getId();\n  const deployedNetwork = Wallet.networks[networkId];\n  return new web3.eth.Contract(Wallet.abi, deployedNetwork && deployedNetwork.address);\n};\n\nexport { getWeb3, getWallet };","map":{"version":3,"sources":["C:/Users/USER/Desktop/Web3/6 figure blockchain/wallet/client/src/utils.js"],"names":["Web3","Wallet","getWeb3","getWallet","web3","networkId","eth","net","getId","deployedNetwork","networks","Contract","abi","address"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,SAAO,IAAIF,IAAJ,CAAS,uBAAT,CAAP,CADoB,CAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CArBD;;AAuBA,MAAMG,SAAS,GAAG,MAAMC,IAAN,IAAc;AAC9B,QAAMC,SAAS,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAxB;AACA,QAAMC,eAAe,GAAGR,MAAM,CAACS,QAAP,CAAgBL,SAAhB,CAAxB;AACA,SAAO,IAAID,IAAI,CAACE,GAAL,CAASK,QAAb,CACLV,MAAM,CAACW,GADF,EAELH,eAAe,IAAIA,eAAe,CAACI,OAF9B,CAAP;AAID,CAPD;;AASA,SAASX,OAAT,EAAkBC,SAAlB","sourcesContent":["import Web3 from 'web3';\r\nimport Wallet from './contracts/Wallet.json';\r\n\r\nconst getWeb3 = () => {\r\n  return new Web3('http://localhost:9545');\r\n  // return new Promise((resolve,reject) => {\r\n  //   window.addEventListener('load', async () => {\r\n  //       if (window.ethereum) {\r\n  //         const web3 = new Web3(window.ethereum);\r\n  //         resolve(web3);\r\n  //         try{\r\n  //           await window.ethereum.enable();\r\n  //           resolve(web3);\r\n  //         } catch (error) {\r\n  //           reject(error);\r\n  //         }\r\n          \r\n  //       // }else if(window.web3) {\r\n  //       //   resolve(window.web3);\r\n  //       }else{\r\n  //         reject('Must install metamask!');\r\n  //       }\r\n  // });\r\n  // });\r\n};\r\n\r\nconst getWallet = async web3 => {\r\n  const networkId = await web3.eth.net.getId();\r\n  const deployedNetwork = Wallet.networks[networkId];\r\n  return new web3.eth.Contract(\r\n    Wallet.abi,\r\n    deployedNetwork && deployedNetwork.address,\r\n  );\r\n}\r\n\r\nexport { getWeb3, getWallet }; \r\n"]},"metadata":{},"sourceType":"module"}